package require dbf
package require tcltest
namespace import ::tcltest::*

# dbf syntax

test compat-1.1 "package version" -body {
   package require dbf
} -result {1.3.*} -match glob

test compat-1.1 "create invalid name" {
   dbf d -create __notexistent__/foo
} {0}

test compat-1.2 "open invalid name" {
   dbf d -open __notexistent__/foo
} {0}

test compat-1.3 "open invalid file" -setup {
   set f [tcltest::makeFile "bar" foo]
} -cleanup {
   tcltest::removeFile foo; unset f
} -body {
   dbf d -open $f
} -result {0}

test compat-1.4 {create success} -cleanup {
   catch {rename $d ""; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   dbf d -create [file join [temporaryDirectory] test.dbf]
} -result {1}

test compat-1.5 {open success} -setup {
   dbf d -create [file join [temporaryDirectory] test.dbf]
   $d forget; unset d
} -cleanup {
   catch {$d forget; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   dbf d -open [file join [temporaryDirectory] test.dbf]
} -result {1}

test compat-2.0 {insert too many values} -setup {
   dbf d -create [file join [temporaryDirectory] test.dbf] 
   $d add C C 10 0
} -cleanup {
   catch {$d forget; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   $d insert end {foo} {bar}
} -result {0}

test compat-2.1 {insert invalid logical} -setup {
   dbf d -create [file join [temporaryDirectory] test.dbf]
   $d add L L 1 0
} -cleanup {
   catch {$d forget; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   $d insert end X
} -result {0}

test compat-2.2 {float format} -setup {
   dbf d -create [file join [temporaryDirectory] test.dbf]
   $d add N N 10 2
} -cleanup {
   catch {$d forget; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   $d insert 0 1.2
   $d record 0
} -result {1.20}

cleanupTests
