package require tcldbf
package require tcltest
namespace import ::tcltest::*

proc dbf_create {filename struct args} {
   dbf dbf -create $filename {*}$args
   foreach l $struct {
       lassign $l l - t w p
       $dbf add $l $t $w $p
   }
   $dbf forget
}

# syntax

foreach {n c} {
   0 "dbf"
   1 "dbf d"
   2 "dbf d -foo" 
   3 "dbf d -create" 
   4 "dbf d -open" 
} {
   test dbf-1.$n "usage '$c'" -returnCodes 1 -body {
      {*}$c
   } -result {wrong # args: should be "dbf <varname> -create|-open <filename> ?option?"}
   unset n c
}

test dbf-1.10 "usage 'dbf create with opts'" -returnCodes 1 -body {
   dbf d -foo bar
} -result {wrong # args: should be "dbf d -create|-open <filename> ?option?"}

test dbf-1.11 "usage 'dbf create with opts'" -returnCodes 1 -body {
   dbf d -create foo -codepage
} -result {wrong # args: should be "dbf d -create <filename> ?-codepage <codepage>?"}

test dbf-1.12 "usage 'dbf create with opts2'" -returnCodes 1 -body {
   dbf d -create foo -bar baz
} -result {wrong # args: should be "dbf d -create <filename> ?-codepage <codepage>?"}

test dbf-1.13 "usage 'dbf open with opts'" -returnCodes 1 -body {
   dbf d -open foo -bar
} -result {wrong # args: should be "dbf d -open <filename> ?-readonly?"}

# create / open errors

test dbf-2.1 "create invalid name" -returnCodes 1 -body {
   dbf d -create __notexistent__/foo
} -result {create __notexistent__/foo failed}

test dbf-2.2 "open invalid name" -returnCodes 1 -body {
   dbf d -open __notexistent__/foo
} -result {open __notexistent__/foo failed}

test dbf-2.3 "open invalid file" -returnCodes 1 -setup {
   set f [tcltest::makeFile "bar" foo]
} -cleanup {
   tcltest::removeFile foo; unset f
} -body {
   dbf d -open $f
} -result {open */foo failed} -match glob

# create

test dbf-3.0 {create} -cleanup {
   catch {rename $d ""; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   dbf d -create [file join [temporaryDirectory] test.dbf]
} -result {dbf.????} -match glob

test dbf-3.1 {create/command} -cleanup {
   catch {rename $d ""; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   dbf d -create [file join [temporaryDirectory] test.dbf]
   info commands $d
} -result {dbf.????} -match glob

test dbf-4.2 {create/forget} -cleanup {
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   dbf d -create [file join [temporaryDirectory] test.dbf]
   $d forget
   info commands $d
} -result {}

# open

test dbf-5.1 {create/open} -setup {
   dbf_create [file join [temporaryDirectory] test.dbf] {}
} -cleanup {
   catch {$d forget; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   dbf d -open [file join [temporaryDirectory] test.dbf]
} -result {dbf.????} -match glob

test dbf-5.2 {create/open/command} -setup {
   dbf_create [file join [temporaryDirectory] test.dbf] {}
} -cleanup {
   catch {$d forget; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   dbf d -open [file join [temporaryDirectory] test.dbf]
   info commands $d
} -result {dbf.????} -match glob

test dbf-5.3 {create/open/forget} -setup {
   dbf_create [file join [temporaryDirectory] test.dbf] {}
} -cleanup {
   catch {unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   dbf d -open [file join [temporaryDirectory] test.dbf]
   $d forget
   info commands $d
} -result {}

# open with codepage

test dbf-6.0 {create/open/codepage default} -setup {
   dbf_create [file join [temporaryDirectory] test.dbf] {}
   dbf d -open [file join [temporaryDirectory] test.dbf]
} -cleanup {
   catch {$d forget; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   $d codepage
} -result {LDID/87}

test dbf-6.1 {create/open/codepage custom} -setup {
   dbf d -create [file join [temporaryDirectory] test.dbf] -codepage "LDID/201"
   $d forget; unset d
   dbf d -open [file join [temporaryDirectory] test.dbf]
} -cleanup {
   catch {$d forget; unset d}
   catch {file delete [file join [temporaryDirectory] test.dbf]}
} -body {
   $d codepage
} -result {LDID/201}

cleanupTests
